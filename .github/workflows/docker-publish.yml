name: Docker Build with Versioning

# Acest workflow utilizează acțiuni care nu sunt certificate de GitHub.
# Ele sunt furnizate de terți și sunt guvernate de
# termeni de servicii, politici de confidențialitate și documentație de suport separate.

on:
  schedule:
    - cron: '37 3 * * *'
  push:
    branches: ["master"]
    tags: ['v*.*.*']  # Trigger pentru versiuni semantice
  pull_request:
    branches: ["master"]

env:
  # Folosește docker.io pentru Docker Hub dacă este gol
  REGISTRY: ghcr.io
  # github.repository ca <cont>/<repo>
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build:

    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      id-token: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Obține Build Number
        run: echo "BUILD_NUMBER=${{ github.run_number }}" >> $GITHUB_ENV

      # Instalează cosign, cu excepția PR-urilor
      # https://github.com/sigstore/cosign-installer
      - name: Instalează cosign
        if: github.event_name != 'pull_request'
        uses: sigstore/cosign-installer@v3.5.0
        with:
          cosign-release: 'v2.2.4'

      # Configurează BuildKit pentru a construi imagini multi-platformă și exporta cache
      # https://github.com/docker/setup-buildx-action
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3.3.0

      # Logare în registrul Docker
      - name: Log into registry
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v3.1.0
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # Extrage metadate (tag-uri, etichete) pentru Docker
      - name: Extract Docker metadata
        uses: docker/metadata-action@v5.5.1
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

      # Construiește și împinge imaginea Docker
      - name: Build and Push Docker image
        uses: docker/build-push-action@v5.3.0
        with:
          context: .
          push: ${{ github.event_name != 'pull_request' }}
          tags: |
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:v1.0.${{ env.BUILD_NUMBER }}
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest
          cache-from: type=gha
          cache-to: type=gha,mode=max

      # Semnarea imaginii Docker
      - name: Sign the Docker image
        if: github.event_name != 'pull_request'
        run: |
          echo "TAGS=${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:v1.0.${{ env.BUILD_NUMBER }},${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest" >> $GITHUB_ENV
          echo "DIGEST=${{ steps.build-push-action.outputs.digest }}" >> $GITHUB_ENV
          echo "${TAGS}" | xargs -I {} cosign sign --yes {}@${DIGEST}
